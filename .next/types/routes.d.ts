// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/courses" | "/admin/dashboard" | "/admin/enrollments" | "/admin/login" | "/auth-setup-guide" | "/auth/callback" | "/child" | "/contact" | "/courses" | "/courses/[slug]" | "/dashboard" | "/dashboard/enroll" | "/dashboard/lessons" | "/dashboard/parent" | "/dashboard/tutorials" | "/debug" | "/debug-auth" | "/debug-firebase" | "/enroll" | "/enroll/callback" | "/forgot-password" | "/guardian" | "/guardian/auth" | "/guardian/billing" | "/guardian/child/[childId]" | "/guardian/child/[childId]/controls" | "/guardian/dashboard" | "/guardian/dev-bypass" | "/guardian/guidance" | "/instructor-bypass" | "/instructor-fast" | "/instructor-fresh-login" | "/instructor-minimal" | "/instructor-standalone" | "/instructor/courses" | "/instructor/courses/[id]" | "/instructor/courses/new" | "/instructor/dashboard" | "/instructor/instant-login" | "/instructor/login" | "/instructor/minimal-login" | "/instructor/quick-login" | "/instructor/schedule" | "/instructor/settings" | "/instructor/settings/notifications" | "/instructor/settings/profile" | "/instructor/settings/security" | "/instructor/settings/theme" | "/instructor/simple-login" | "/instructor/static-test" | "/instructor/students" | "/instructor/test" | "/login" | "/modules/[age]" | "/payment" | "/programs" | "/reset-password" | "/schools" | "/student" | "/student-login" | "/student/account" | "/student/assignments" | "/student/course/[id]" | "/student/games" | "/student/guidance" | "/student/messages" | "/student/modules" | "/student/projects" | "/student/reset-password" | "/team" | "/test" | "/test-auth" | "/test-firebase" | "/test-supabase" | "/tracks" | "/tracks/[slug]"
type AppRouteHandlerRoutes = "/api/admin/analytics/enrollments" | "/api/admin/auth" | "/api/admin/courses" | "/api/admin/courses/content" | "/api/admin/enrollments" | "/api/admin/modules" | "/api/admin/resend-receipt" | "/api/admin/test-auth" | "/api/auth/check-status" | "/api/auth/check-user" | "/api/auth/client-test" | "/api/auth/confirm-reset" | "/api/auth/create-frederick" | "/api/auth/create-test-user" | "/api/auth/diagnose" | "/api/auth/login" | "/api/auth/register" | "/api/auth/reset-password" | "/api/auth/setup-guide" | "/api/auth/signin" | "/api/auth/signup" | "/api/auth/simple-signup" | "/api/auth/status" | "/api/auth/test" | "/api/auth/test-create-user" | "/api/chatbot" | "/api/check-env" | "/api/create-auth-user" | "/api/create-user-manual" | "/api/debug" | "/api/debug-env" | "/api/debug/user" | "/api/enroll" | "/api/enroll/update-status" | "/api/fix-user-confirmation" | "/api/fix-user-password" | "/api/guidance/limit/set" | "/api/guidance/pin" | "/api/guidance/pin/check" | "/api/guidance/pin/set" | "/api/guidance/screen-time" | "/api/guidance/screen-time/[studentId]" | "/api/guidance/students" | "/api/guidance/usage/reset" | "/api/health" | "/api/instructor/auth" | "/api/instructor/courses" | "/api/instructor/courses/[id]" | "/api/instructor/debug-auth" | "/api/instructor/lessons" | "/api/instructor/modules" | "/api/instructor/schedule" | "/api/instructor/simple-auth" | "/api/instructor/test-auth" | "/api/instructor/test-bcrypt" | "/api/manual-fix-user" | "/api/partner" | "/api/payments/process" | "/api/payments/status/[paymentId]" | "/api/payments/webhook" | "/api/paystack/initialize" | "/api/paystack/verify" | "/api/paystack/webhook" | "/api/portal/access" | "/api/portal/dashboard" | "/api/reset-password" | "/api/reset-user-password" | "/api/simple-login-test" | "/api/student/courses/[id]" | "/api/student/enrolled-courses" | "/api/student/forgot-password" | "/api/student/modules" | "/api/student/reset-password" | "/api/student/schedule" | "/api/subscribe" | "/api/subscriptions/create" | "/api/test-client-supabase" | "/api/test-enrollment" | "/api/test-env" | "/api/test-login" | "/api/test-payment-verify" | "/api/test-simple" | "/api/test-supabase" | "/api/test-supabase-admin" | "/api/test-supabase-connection" | "/api/users/enroll" | "/api/users/profile"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/dashboard" | "/instructor" | "/instructor-bypass" | "/instructor-fast" | "/instructor-fresh-login" | "/instructor-minimal" | "/instructor-standalone" | "/instructor/instant-login" | "/instructor/login" | "/instructor/minimal-login" | "/instructor/quick-login" | "/instructor/simple-login" | "/instructor/static-test" | "/instructor/test" | "/student" | "/student/login"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/courses": {}
  "/admin/dashboard": {}
  "/admin/enrollments": {}
  "/admin/login": {}
  "/api/admin/analytics/enrollments": {}
  "/api/admin/auth": {}
  "/api/admin/courses": {}
  "/api/admin/courses/content": {}
  "/api/admin/enrollments": {}
  "/api/admin/modules": {}
  "/api/admin/resend-receipt": {}
  "/api/admin/test-auth": {}
  "/api/auth/check-status": {}
  "/api/auth/check-user": {}
  "/api/auth/client-test": {}
  "/api/auth/confirm-reset": {}
  "/api/auth/create-frederick": {}
  "/api/auth/create-test-user": {}
  "/api/auth/diagnose": {}
  "/api/auth/login": {}
  "/api/auth/register": {}
  "/api/auth/reset-password": {}
  "/api/auth/setup-guide": {}
  "/api/auth/signin": {}
  "/api/auth/signup": {}
  "/api/auth/simple-signup": {}
  "/api/auth/status": {}
  "/api/auth/test": {}
  "/api/auth/test-create-user": {}
  "/api/chatbot": {}
  "/api/check-env": {}
  "/api/create-auth-user": {}
  "/api/create-user-manual": {}
  "/api/debug": {}
  "/api/debug-env": {}
  "/api/debug/user": {}
  "/api/enroll": {}
  "/api/enroll/update-status": {}
  "/api/fix-user-confirmation": {}
  "/api/fix-user-password": {}
  "/api/guidance/limit/set": {}
  "/api/guidance/pin": {}
  "/api/guidance/pin/check": {}
  "/api/guidance/pin/set": {}
  "/api/guidance/screen-time": {}
  "/api/guidance/screen-time/[studentId]": { "studentId": string; }
  "/api/guidance/students": {}
  "/api/guidance/usage/reset": {}
  "/api/health": {}
  "/api/instructor/auth": {}
  "/api/instructor/courses": {}
  "/api/instructor/courses/[id]": { "id": string; }
  "/api/instructor/debug-auth": {}
  "/api/instructor/lessons": {}
  "/api/instructor/modules": {}
  "/api/instructor/schedule": {}
  "/api/instructor/simple-auth": {}
  "/api/instructor/test-auth": {}
  "/api/instructor/test-bcrypt": {}
  "/api/manual-fix-user": {}
  "/api/partner": {}
  "/api/payments/process": {}
  "/api/payments/status/[paymentId]": { "paymentId": string; }
  "/api/payments/webhook": {}
  "/api/paystack/initialize": {}
  "/api/paystack/verify": {}
  "/api/paystack/webhook": {}
  "/api/portal/access": {}
  "/api/portal/dashboard": {}
  "/api/reset-password": {}
  "/api/reset-user-password": {}
  "/api/simple-login-test": {}
  "/api/student/courses/[id]": { "id": string; }
  "/api/student/enrolled-courses": {}
  "/api/student/forgot-password": {}
  "/api/student/modules": {}
  "/api/student/reset-password": {}
  "/api/student/schedule": {}
  "/api/subscribe": {}
  "/api/subscriptions/create": {}
  "/api/test-client-supabase": {}
  "/api/test-enrollment": {}
  "/api/test-env": {}
  "/api/test-login": {}
  "/api/test-payment-verify": {}
  "/api/test-simple": {}
  "/api/test-supabase": {}
  "/api/test-supabase-admin": {}
  "/api/test-supabase-connection": {}
  "/api/users/enroll": {}
  "/api/users/profile": {}
  "/auth-setup-guide": {}
  "/auth/callback": {}
  "/child": {}
  "/contact": {}
  "/courses": {}
  "/courses/[slug]": { "slug": string; }
  "/dashboard": {}
  "/dashboard/enroll": {}
  "/dashboard/lessons": {}
  "/dashboard/parent": {}
  "/dashboard/tutorials": {}
  "/debug": {}
  "/debug-auth": {}
  "/debug-firebase": {}
  "/enroll": {}
  "/enroll/callback": {}
  "/forgot-password": {}
  "/guardian": {}
  "/guardian/auth": {}
  "/guardian/billing": {}
  "/guardian/child/[childId]": { "childId": string; }
  "/guardian/child/[childId]/controls": { "childId": string; }
  "/guardian/dashboard": {}
  "/guardian/dev-bypass": {}
  "/guardian/guidance": {}
  "/instructor": {}
  "/instructor-bypass": {}
  "/instructor-fast": {}
  "/instructor-fresh-login": {}
  "/instructor-minimal": {}
  "/instructor-standalone": {}
  "/instructor/courses": {}
  "/instructor/courses/[id]": { "id": string; }
  "/instructor/courses/new": {}
  "/instructor/dashboard": {}
  "/instructor/instant-login": {}
  "/instructor/login": {}
  "/instructor/minimal-login": {}
  "/instructor/quick-login": {}
  "/instructor/schedule": {}
  "/instructor/settings": {}
  "/instructor/settings/notifications": {}
  "/instructor/settings/profile": {}
  "/instructor/settings/security": {}
  "/instructor/settings/theme": {}
  "/instructor/simple-login": {}
  "/instructor/static-test": {}
  "/instructor/students": {}
  "/instructor/test": {}
  "/login": {}
  "/modules/[age]": { "age": string; }
  "/payment": {}
  "/programs": {}
  "/reset-password": {}
  "/schools": {}
  "/student": {}
  "/student-login": {}
  "/student/account": {}
  "/student/assignments": {}
  "/student/course/[id]": { "id": string; }
  "/student/games": {}
  "/student/guidance": {}
  "/student/login": {}
  "/student/messages": {}
  "/student/modules": {}
  "/student/projects": {}
  "/student/reset-password": {}
  "/team": {}
  "/test": {}
  "/test-auth": {}
  "/test-firebase": {}
  "/test-supabase": {}
  "/tracks": {}
  "/tracks/[slug]": { "slug": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/dashboard": never
  "/instructor": never
  "/instructor-bypass": never
  "/instructor-fast": never
  "/instructor-fresh-login": never
  "/instructor-minimal": never
  "/instructor-standalone": never
  "/instructor/instant-login": never
  "/instructor/login": never
  "/instructor/minimal-login": never
  "/instructor/quick-login": never
  "/instructor/simple-login": never
  "/instructor/static-test": never
  "/instructor/test": never
  "/student": never
  "/student/login": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
